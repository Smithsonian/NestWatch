{"version":3,"sources":["helpers/_text.scss","layouts.css","layouts.scss","variables/_2-font.scss","../node_modules/breakpoint-sass/stylesheets/_breakpoint.scss"],"names":[],"mappings":"AAsIA;;EAEE;ACrIF,gCAAgC;ACuChC;EF+DI,oBGlFsD;EHmFtD,sBAnB2C,EE3C9C;;AEoBG;EHvDF,gCAAgC;ECsCjC;;IAEC,cAAa;IACb,uCAAsC;IACtC,4BAAsB;QAAtB,uBAAsB,EAEtB;EDtCA,gCAAgC;ECuCjC;IAEE,wBAAuB;IACvB,6BAAQ;QAAR,kBAAQ;YAAR,SAAQ,EACR;EDvCD,gCAAgC;ECmCjC;IAME,wBAAuB;IACvB,6BAAQ;QAAR,kBAAQ;YAAR,SAAQ,EACR;EDvCD,gCAAgC;EC0CjC;IAEE,wBAAuB,EACvB;ED1CD,gCAAgC;ECuCjC;IAKE,wBAAuB,EACvB,EAAA","file":"../layouts.css","sourcesContent":["// Text overflow\n// Requires inline-block or block for proper styling\n@mixin text-overflow() {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n// [converter] $parent hack\n@mixin text-emphasis-variant($parent, $color) {\n  #{$parent} {\n    color: $color;\n  }\n  a#{$parent}:hover {\n    color: darken($color, 10%);\n  }\n}\n\n@mixin letterpress($opacity){\n  // ($hoff, $voff, $blur, $spread, $color)\n  @include text-shadow(0, 1px, 0, 0, rgba(white, $opacity));\n}\n\n@mixin reset-text() {\n  font-family: $font;\n  // We deliberately do NOT reset font-size.\n  font-style: normal;\n  font-weight: normal;\n  letter-spacing: normal;\n  line-break: auto;\n  line-height: $line-height-base;\n  text-align: left; // Fallback for where `start` is not supported\n  text-align: start;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: none;\n  white-space: normal;\n  word-break: normal;\n  word-spacing: normal;\n  word-wrap: normal;\n}\n\n// Create REM values with PX fall back\n//\n// Generate a REM with PX fallback from\n// $baseFontSize. Enter the desired size based\n// on pixels in numerical form. Supports shorthand.\n//\n// Forked from: http://codepen.io/thejameskyle/pen/JmBjc\n//\n// @author Greg Rickaby\n// @since 1.0\n//\n// Usage: @include rem($property, $values);\n// Example Usage:\n//    @include rem(font-size, (16px);\n//    @include rem(margin, 0 24px 0 12px);\n//\n// Outputs:\n//    font-size: 16px;\n//    font-size: 1.6rem;\n//    margin: 0 24px 0 12px;\n//    margin: 0 2.4rem 0 1.2rem;\n// ----------------------------------\n\n@function parseInt($n) {\n  @return $n / ($n * 0 + 1);\n}\n\n@mixin rem($property, $values) {\n  $px : ();\n  $rem: ();\n\n  $root: $baseFontSize;\n\n  @each $value in $values {\n    @if $value == 0 or $value == auto {\n      $px : append($px , $value);\n      $rem: append($rem, $value);\n    }\n\n    @else if type-of($value) == number {\n      $unit: unit($value);\n      $val: parseInt($value);\n\n      @if $unit == \"px\" {\n        $px : append($px,  $value);\n        $rem: append($rem, ($val / $root + rem));\n      }\n\n      @if $unit == \"rem\" {\n        $px : append($px,  ($val * $root + px));\n        $rem: append($rem, $value);\n      }\n    }\n\n    @else {\n      $px : append($px,  $value);\n      $rem: append($rem, $value);\n    }\n  }\n\n  @if $px == $rem {\n    #{$property}: $px;\n  } @else {\n    #{$property}: $px;\n    #{$property}: $rem;\n  }\n}\n\n@function rem($value) {\n  $root: $baseFontSize;\n  $val: parseInt($value);\n  $return: ();\n\n  @if unit($value) == \"px\" {\n    $return: append($return, ($val / $root + rem));\n  } @else {\n    $return: append($return, ($val * $root + px));\n  }\n\n  @return $return;\n}\n\n@function em($pixels, $base: $font-size-base) {\n  @if $pixels == 0 {\n    @return 0;\n  }\n  @else {\n    @return ($pixels / $base) * 1em;\n  }\n}\n\n\n/* Rem Unit font sizes with relative fallback http:/seesparkbox.com/foundry/scss_rem_mixin_now_with_a_better_fallback\n\tUsage: @include font-size(1, large);\n*/\n@mixin font-size( $decimal-size, $keyword: null ) {\n  @if $keyword{ font-size: $keyword; }\n  @else { font-size: $decimal-size * $base-font-multiplier * 16px;}\n  font-size: $decimal-size * 1rem;\n}\n\n@mixin link-colors($normal, $hover: false, $active: false, $visited: false, $focus: false) {\n  color: $normal;\n  @if $visited {\n    &:visited {\n      color: $visited;\n    }\n  }\n  @if $focus {\n    &:focus {\n      color: $focus;\n    }\n  }\n  @if $hover {\n    &:hover {\n      color: $hover;\n    }\n  }\n  @if $active {\n    &:active {\n      color: $active;\n    }\n  }\n}","/* Rem Unit font sizes with relative fallback http:/seesparkbox.com/foundry/scss_rem_mixin_now_with_a_better_fallback\n\tUsage: @include font-size(1, large);\n*/\n/* line 43, sass/layouts.scss */\n.layout__region {\n  margin-bottom: 24px;\n  margin-bottom: 2.4rem; }\n\n@media (min-width: 768px) {\n  /* line 48, sass/layouts.scss */\n  .layout--twocol-left.has-aside .wrapper,\n  .layout--twocol-right.has-aside .wrapper {\n    display: grid;\n    grid-template-columns: repeat(12, 1fr);\n    align-content: stretch; }\n  /* line 56, sass/layouts.scss */\n  .layout--twocol-left.has-aside .layout__region--aside {\n    grid-column-end: span 3;\n    order: 1; }\n  /* line 60, sass/layouts.scss */\n  .layout--twocol-left.has-aside .layout__region--main {\n    grid-column-end: span 9;\n    order: 2; }\n  /* line 67, sass/layouts.scss */\n  .layout--twocol-right.has-aside .layout__region--aside {\n    grid-column-end: span 3; }\n  /* line 70, sass/layouts.scss */\n  .layout--twocol-right.has-aside .layout__region--main {\n    grid-column-end: span 9; } }\n","@import \"../node_modules/breakpoint-sass/stylesheets/breakpoint\";\n@import \"variables/_1-base.scss\";\n@import \"variables/_2-font.scss\";\n@import \"variables/_3-layout.scss\";\n@import \"variables/_button.scss\";\n@import \"variables/_table.scss\";\n@import \"helpers/_background-variant.scss\";\n@import \"helpers/_background.scss\";\n@import \"helpers/_box-emboss.scss\";\n@import \"helpers/_box-sizing.scss\";\n@import \"helpers/_buttons.scss\";\n@import \"helpers/_center-block.scss\";\n@import \"helpers/_clearfix.scss\";\n@import \"helpers/_font-smooth.scss\";\n@import \"helpers/_font.scss\";\n@import \"helpers/_forms.scss\";\n@import \"helpers/_gradients.scss\";\n@import \"helpers/_hide-text.scss\";\n@import \"helpers/_icon.scss\";\n@import \"helpers/_image.scss\";\n@import \"helpers/_keyframe.scss\";\n@import \"helpers/_labels.scss\";\n@import \"helpers/_layout.scss\";\n@import \"helpers/_links.scss\";\n@import \"helpers/_list.scss\";\n@import \"helpers/_navigation.scss\";\n@import \"helpers/_opacity.scss\";\n@import \"helpers/_pagination.scss\";\n@import \"helpers/_panels.scss\";\n@import \"helpers/_preserve3d.scss\";\n@import \"helpers/_progress-bar.scss\";\n@import \"helpers/_reset-filter.scss\";\n@import \"helpers/_resize.scss\";\n@import \"helpers/_responsive-visibility.scss\";\n@import \"helpers/_sass-inline-svg-data.scss\";\n@import \"helpers/_sass-inline-svg.scss\";\n@import \"helpers/_size.scss\";\n@import \"helpers/_tab-focus.scss\";\n@import \"helpers/_table-row.scss\";\n@import \"helpers/_text.scss\";\n@import \"helpers/_vendor-prefixes.scss\";\n\n.layout__region {\n\t@include rem(margin-bottom, $space);\n}\n\n@include breakpoint($tab) {\n\t.layout--twocol-left.has-aside .wrapper,\n\t.layout--twocol-right.has-aside .wrapper{\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(12, 1fr);\n\t\talign-content: stretch;\n\n\t}\n\t.layout--twocol-left.has-aside {\n\t\t.layout__region--aside {\n\t\t\tgrid-column-end: span 3;\n\t\t\torder: 1;\n\t\t}\n\t\t.layout__region--main {\n\t\t\tgrid-column-end: span 9;\n\t\t\torder: 2;\n\t\t}\n\t}\n\n\t.layout--twocol-right.has-aside {\n\t\t.layout__region--aside {\n\t\t\tgrid-column-end: span 3;\n\t\t}\n\t\t.layout__region--main {\n\t\t\tgrid-column-end: span 9;\n\t\t}\n\t}\n}","// Font Settings\n$font-path                : '../fonts/BrandFonts';\n$font                    : 'Lato', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n\n$font-secondary          : 'MinionPro', Georgia, Times, 'Times New Roman', serif;\n$font-serif              : Georgia,Times,'Times New Roman',sans-serif;\n$baseFontSize            : 10;\n$font-size-base          : 16px;\n//font sizes are based on minor third and perfect fifth\n$font-size-h1-alt        : 60px;\n//$font-size-h1            : round($font-size-base*3.157);\n$font-size-h1         \t\t: 54px;\n$font-size-h2            : 36px;\n$font-size-h3            : 28px;\n$font-size-h4            : 23px;\n$font-size-h5            : 19px; // minor 3rd\n$font-size-tagline       : $font-size-h3;\n$font-size-h6            : $font-size-base; // 16x\n\n$font-size-small         : round($font-size-base*.75);\n$font-size-large         : 19px;\n\n$baseLineHeight          : 1.5;\n$line-height-base        : $font-size-base*$baseLineHeight;\n\n$line-height-h1-alt      : ($line-height-base*3)/$font-size-h1-alt;\n$line-height-h1      \t\t : ($line-height-base*2.5)/$font-size-h1;\n$line-height-h2          : ($line-height-base*2)/$font-size-h2;\n$line-height-h3          : ($line-height-base*1.5)/$font-size-h3;\n$line-height-h4          : $line-height-base/$font-size-h4;\n$line-height-h5          : $line-height-base/$font-size-h5;\n$line-height-tagline     :  $line-height-base/$font-size-h3;\n$line-height-h6          : $line-height-base/$font-size-h6;\n\n$line-height-small       : $line-height-base*.75/$font-size-small;\n$line-height-large       : ($line-height-base*1.25)/$font-size-large;\n\n\n// Font Weights\n$fw-normal: 400;\n$fw-bold: 700;","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n"]}