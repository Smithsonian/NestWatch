.page-title {
  @include set_layout($max-width);
  @include rem(margin-top, $space-and-half);
  @include rem(margin-bottom, $space-and-half);
  .node--type-page & {
    width: 100%;
    max-width: 100%;
    margin-top: 0;
  }

  &.spacing-extra {
    @include rem(margin-top, $space-double);
    @include rem(margin-bottom, $space-double);
  }
  &.spacing-top-extra {
    @include rem(margin-top, $space-double);
  }
  &.spacing-bottom-extra {
    @include rem(margin-bottom, $space-double);
  }
}

.views-row {
  .field-content ul {
    @extend %reset-list;
  }
}
.views-view-grid.horizontal{
  @include breakpoint($small) {
    display: flex;
    flex-wrap: wrap;
    &:before,
    &:after {
      flex-basis: 0;
      order: 1;
    }
    > .views-row {
      width: span(6);
      max-width: span(6);
      margin-right: gutter();
      word-break:break-word;
      &:nth-child(2n){
        margin-right: 0;
      }
    }
    .no-flexbox & {
      @include clearfix;
      >.entity {
        float: left;
        &:nth-child(2n+1){
          clear: left;
        }
      }
    }
  }
  @include breakpoint($desk) {
    &.cols-3,
    &.cols-5,
    &.cols-6{
      > .views-row {
        &,
        &:nth-child(2n) {
          @include span(4);
          max-width: span(4);
        }
        &:nth-child(3n) {
          @include last;
        }
        &:nth-child(3n+1) {
          clear: both;
        }

      }
    }
    &.cols-4 {
      > .views-row {
        &,
        &:nth-child(2n) {
          @include span(3);
          max-width: span(3);
        }
        &:nth-child(4n) {
          @include last;
        }
        &:nth-child(4n+1) {
          clear: both;
        }

      }
    }
  }

  @include breakpoint($wide) {
    &.cols-5 {
      > .views-row {
        &,
        &:nth-child(2n) {
          width: 16%;
          max-width: 16%;
          margin-right: 5%;
        }
        &:nth-child(5n) {
          margin-right: 0;
        }
        &:nth-child(5n+1) {
          clear: both;
        }

      }
    }
    &.cols-6 {
      > .views-row {
        &,
        &:nth-child(2n) {
          @include span(2);
          max-width: span(2);
        }
        &:nth-child(6n) {
          @include last;
        }
        &:nth-child(6n+1) {
          clear: both;
        }

      }
    }
  }
}
